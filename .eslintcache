[{"/home/rstorey/Desktop/projects/bonko-requests/src/index.js":"1","/home/rstorey/Desktop/projects/bonko-requests/src/App.js":"2","/home/rstorey/Desktop/projects/bonko-requests/src/components/home.js":"3","/home/rstorey/Desktop/projects/bonko-requests/src/components/rows.js":"4","/home/rstorey/Desktop/projects/bonko-requests/src/components/submit-modal.js":"5","/home/rstorey/Desktop/projects/bonko-requests/src/components/admin-modal.js":"6","/home/rstorey/Desktop/projects/bonko-requests/src/functional-components/footer.js":"7","/home/rstorey/Desktop/projects/bonko-requests/src/functions/apifetch.js":"8","/home/rstorey/Desktop/projects/bonko-requests/src/components/completed-rows.js":"9","/home/rstorey/Desktop/projects/bonko-requests/src/components/denied-rows.js":"10"},{"size":232,"mtime":1687348861586,"results":"11","hashOfConfig":"12"},{"size":275,"mtime":1687348861578,"results":"13","hashOfConfig":"12"},{"size":8280,"mtime":1687375211218,"results":"14","hashOfConfig":"12"},{"size":2491,"mtime":1687375748865,"results":"15","hashOfConfig":"12"},{"size":2860,"mtime":1687348861582,"results":"16","hashOfConfig":"12"},{"size":3655,"mtime":1687348861578,"results":"17","hashOfConfig":"12"},{"size":193,"mtime":1687348861582,"results":"18","hashOfConfig":"12"},{"size":2178,"mtime":1687361732419,"results":"19","hashOfConfig":"12"},{"size":2053,"mtime":1687372838476,"results":"20","hashOfConfig":"12"},{"size":2049,"mtime":1687372833168,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"hzh6k5",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"/home/rstorey/Desktop/projects/bonko-requests/src/index.js",[],["45","46"],"/home/rstorey/Desktop/projects/bonko-requests/src/App.js",[],"/home/rstorey/Desktop/projects/bonko-requests/src/components/home.js",["47","48"],"/home/rstorey/Desktop/projects/bonko-requests/src/components/rows.js",["49","50","51","52","53"],"/home/rstorey/Desktop/projects/bonko-requests/src/components/submit-modal.js",[],"/home/rstorey/Desktop/projects/bonko-requests/src/components/admin-modal.js",[],"/home/rstorey/Desktop/projects/bonko-requests/src/functional-components/footer.js",[],"/home/rstorey/Desktop/projects/bonko-requests/src/functions/apifetch.js",[],"/home/rstorey/Desktop/projects/bonko-requests/src/components/completed-rows.js",["54"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart as farHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { useQuery } from \"react-query\";\nimport { fetchRequests, postNewUpvotes } from \"../functions/apifetch\";\nimport React, { useEffect } from \"react\";\n\nconst FormattedRows = (props) => {\n  const { data, error, isError, isLoading, refetch } = useQuery(\n    \"userRequests\",\n    fetchRequests\n  );\n\n  useEffect(() => {\n    refetch();\n  }, []);\n\n  const handleClick = async (e, index, id, currentUpvotes) => {\n    e.preventDefault();\n    const newUpvotes = currentUpvotes + 1;\n\n    try {\n      await postNewUpvotes(id, newUpvotes);\n      refetch();\n    } catch (error) {\n      console.error(\"Error posting upvotes:\", error);\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (isError) {\n    return <div>Error! {error.message}</div>;\n  }\n\n  const completed_items = data.filter(object=>{\n    return object.status === 'Completed'\n  })\n\n  function handleRowClick(index) {\n    props.setSelectedObject(completed_items[index]);\n    props.openAdminModal();\n  }\n\n  return (\n    <div className=\"data-wrapper\">\n      {completed_items.map((row, index) => (\n        <div className=\"row\" key={index}>\n          <div\n            className=\"row-data\"\n            onClick={(row) => handleRowClick(index)}\n            title={row.description}\n          >\n            <div className=\"col\">{row.request}</div>\n            <div className=\"col\">{row.requestor}</div>\n            <div className=\"col\">{row.status}</div>\n            <div className=\"col\">{row.dateopened}</div>\n          </div>\n          <div className=\"up-vote-container\">\n            {row.upvotes}\n            <FontAwesomeIcon\n              icon={farHeart}\n              className=\"up-vote\"\n              id={\"heart\" + index}\n              onClick={(e, index) =>\n                handleClick(e, index, row.uid, row.upvotes)\n              }\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FormattedRows;\n","/home/rstorey/Desktop/projects/bonko-requests/src/components/denied-rows.js",["55"],"import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart as farHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { useQuery } from \"react-query\";\nimport { fetchRequests, postNewUpvotes } from \"../functions/apifetch\";\nimport React, { useEffect } from \"react\";\n\nconst DeniedFormattedRows = (props) => {\n  const { data, error, isError, isLoading, refetch } = useQuery(\n    \"userRequests\",\n    fetchRequests\n  );\n\n  useEffect(() => {\n    refetch();\n  }, []);\n\n  const handleClick = async (e, index, id, currentUpvotes) => {\n    e.preventDefault();\n    const newUpvotes = currentUpvotes + 1;\n\n    try {\n      await postNewUpvotes(id, newUpvotes);\n      refetch();\n    } catch (error) {\n      console.error(\"Error posting upvotes:\", error);\n    }\n  };\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (isError) {\n    return <div>Error! {error.message}</div>;\n  }\n\n  const denied_items = data.filter(object=>{\n    return object.status === 'No'\n  })\n\n  function handleRowClick(index) {\n    props.setSelectedObject(denied_items[index]);\n    props.openAdminModal();\n  }\n\n  return (\n    <div className=\"data-wrapper\">\n      {denied_items.map((row, index) => (\n        <div className=\"row\" key={index}>\n          <div\n            className=\"row-data\"\n            onClick={(row) => handleRowClick(index)}\n            title={row.description}\n          >\n            <div className=\"col\">{row.request}</div>\n            <div className=\"col\">{row.requestor}</div>\n            <div className=\"col\">{row.status}</div>\n            <div className=\"col\">{row.dateopened}</div>\n          </div>\n          <div className=\"up-vote-container\">\n            {row.upvotes}\n            <FontAwesomeIcon\n              icon={farHeart}\n              className=\"up-vote\"\n              id={\"heart\" + index}\n              onClick={(e, index) =>\n                handleClick(e, index, row.uid, row.upvotes)\n              }\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default DeniedFormattedRows;\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":8,"column":8,"nodeType":"62","messageId":"63","endLine":8,"endColumn":30},{"ruleId":"60","severity":1,"message":"64","line":9,"column":8,"nodeType":"62","messageId":"63","endLine":9,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":13,"column":20,"nodeType":"67","messageId":"68","endLine":13,"endColumn":22},{"ruleId":"65","severity":1,"message":"66","line":16,"column":25,"nodeType":"67","messageId":"68","endLine":16,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":19,"column":25,"nodeType":"67","messageId":"68","endLine":19,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":22,"column":25,"nodeType":"67","messageId":"68","endLine":22,"endColumn":27},{"ruleId":"69","severity":1,"message":"70","line":34,"column":6,"nodeType":"71","endLine":34,"endColumn":8,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"70","line":15,"column":6,"nodeType":"71","endLine":15,"endColumn":8,"suggestions":"73"},{"ruleId":"69","severity":1,"message":"70","line":15,"column":6,"nodeType":"71","endLine":15,"endColumn":8,"suggestions":"74"},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'CompletedFormattedRows' is defined but never used.","Identifier","unusedVar","'DeniedFormattedRows' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["77"],["78"],["79"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},{"desc":"80","fix":"82"},{"desc":"80","fix":"83"},"Update the dependencies array to be: [refetch]",{"range":"84","text":"85"},{"range":"86","text":"85"},{"range":"87","text":"85"},[905,907],"[refetch]",[479,481],[485,487]]